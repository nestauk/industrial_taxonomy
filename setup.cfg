[flake8]

# flake8 code - explanation - extension requirement
# =================================================
# B,B9 - Bugbear - flake8-bugbear
# BLK - Black - flake8-black
# C - complexity - n/a
# D - docstrings - flake8-docstrings
# DAR - darglint (checks docstrings) - darglint
# E - pycodestyle errors - n/a
# F - pyflakes - n/a
# I - Import order - flake8-import-order
# N - PEP8 naming - pep8-naming
# W - pycodestyle warnings - n/a
select = B,B9,BLK,C,D,DAR,E,F,N,W

# E203 - whitespace before ':'
# E501 - line length (dealt with by bugbear)
# W503 - linebreak before binary op
# S101 - warns about assert being removed when compiled
# B305 - `.next()` is not a thing - metaflow false positive
# D104 - missing docstring in public package
# D100 - missing docstring in public module
# ANN101 - Missing type annotation for self
# N803 - argument name should be lowercase - allowed for matrix math
# N806 - variable in function should be lowercase - allowed for matrix math
ignore = E203,E501,W503,B305,D100,D104,ANN101,N803

max-complexity = 10
max-line-length = 80
docstring-convention = google

# Don't run flake8 on notebooks folders - though it may be a good idea, particularly
# if you are unfamiliar with the styles being enforced as this gives you a fast
# feedback loop (ideally in your editor/IDE) to learn.
exclude=*/notebooks/,setup.py

# Tests use asserts and don't all need docstrings
per-file-ignores =
    */tests/*:S,D


[darglint] # Configuration for the darglint documentation linter

# Don't pester about parameters for a one-line docstring (use type annotations)
strictness=short
docstring_style=google

[mypy]
ignore_missing_imports=true
